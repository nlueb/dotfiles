#
#                                                                                            ad88
#    ,d                                                                                      d8"
#    88                                                                                      88
#  MM88MMM 88,dPYba,,adPYba,  88       88 8b,     ,d8     ,adPPYba,  ,adPPYba,  8b,dPPYba, MM88MMM
#    88    88P'   "88"    "8a 88       88  `Y8, ,8P'     a8"     "" a8"     "8a 88P'   `"8a  88
#    88    88      88      88 88       88    )888(       8b         8b       d8 88       88  88
#    88,   88      88      88 "8a,   ,a88  ,d8" "8b,     "8a,   ,aa "8a,   ,a8" 88       88  88
#    "Y888 88      88      88  `"YbbdP'Y8 8P'     `Y8     `"Ybbd8"'  `"YbbdP"'  88       88  88
#

# Variables {{{

# Conditionals:
DARWIN="uname | grep -q Darwin"
LINUX="uname | grep -q Linux"
WSL="cat /proc/version | grep -q 'microsoft'"

# SpaceVim Theme {{{
# ACTIVE_BG="#292b2e"
# ACTIVE_FG="#b2b2b2"
# GRAY="#34323e"
#  }}}

# Badwolf {{{
# ACTIVE_BG="#1c1b1a"
# ACTIVE_FG="#f8f6f2"
# GRAY="#353331"
#  }}}

# Gruvbox {{{
# ACTIVE_BG="#282828"
# ACTIVE_FG="#a89984"
# GRAY="#504945"
# }}}

# OneDark {{{
# ACTIVE_BG="#393e48"
# ACTIVE_FG="#979eab"
# GRAY="#e06c75"
#  }}}

# Yin Dark {{{
# ACTIVE_BG="#000000"
# ACTIVE_FG="#b2b2b2"
# INACTIVE_FG="#262626"
# GRAY="#808080"
#  }}}

# Yin {{{
# ACTIVE_BG="#101010"
# ACTIVE_FG="#949494"
# INACTIVE_FG="#262626"
# GRAY="#808080"
#  }}}

# Yang {{{
# ACTIVE_BG="#f7f7f7"
# ACTIVE_FG="#121212"
# INACTIVE_FG="#bcbcbc"
# GRAY="#808080"
#  }}}

# Rosé Pine Base {{{
# ACTIVE_BG="#191724"
# ACTIVE_FG="#e0def4"
# INACTIVE_FG="#555169"
# GRAY="#808080"
#  }}}

# VSCode Dark+ {{{
ACTIVE_BG="#6a9955"
ACTIVE_FG="#1e1e1e"
INACTIVE_FG="#d4d4d4"
INACTIVE_BG="#264f78"
GRAY="#404040"
#  }}}

# ACTIVE="#[fg=$ACTIVE_BG,bg=$ACTIVE_FG]"
# INACTIVE="#[fg=$ACTIVE_FG,bg=$ACTIVE_BG]"

ACTIVE="#[fg=$ACTIVE_FG,bg=$ACTIVE_BG]"
INACTIVE="#[fg=$INACTIVE_FG,bg=$INACTIVE_BG]"

# }}}

# Settings  {{{

# Helps with TrueColor support
if-shell $LINUX 'set -g default-terminal "xterm-256color"'
if-shell $WSL 'set -g default-terminal "screen-256color"; set -ga terminal-overrides ",*256col*:Tc"'

# inactive/active window style
# set -g window-active-style 'fg=colour007,bg=colour008'
# set -g window-style 'fg=colour007,bg=colour000'

set -g base-index 1         # start window indices at 1
setw -g pane-base-index 1   # start pane indices at 1

set -g renumber-windows on  # renumber windows on close
setw -g automatic-rename on # name window according to current program

set -g set-titles on # set terminal title

# Enable vi mode:
set -g status-keys vi
set -g mode-keys vi

# Remember 10000 lines of history:
set -g history-limit 10000

# Enable mouse mode:
set -g mouse off

# Don't wait for escape sequences:
# https://github.com/speg03/dotfiles/pull/15
# https://superuser.com/questions/942677/consequences-of-escape-time-0-tmux-setting
set -sg escape-time 10

#  }}}

# Host Specific Settings  {{{

# Fix clipboard for macOS:
if-shell $DARWIN "set -g default-command 'reattach-to-user-namespace $SHELL --login'"

#  }}}

# Binds {{{

# Remap prefix key:
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# Make tmux behave more like vim:
unbind %
bind v split-window -h -c '#{pane_current_path}'
unbind '"'
bind s split-window -v -c '#{pane_current_path}'
unbind =
bind = select-layout tiled

# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

bind C-l send-keys 'C-l'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

bind [ previous-window
bind ] next-window

bind o copy-mode

bind-key -T copy-mode-vi v send-keys -X begin-selection

# if else
if-shell $WSL \
    "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel '/mnt/c/Windows/System33/clip.exe'" \
    "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

bind b list-buffers
bind p paste-buffer
bind P choose-buffer

bind q kill-window
bind x kill-pane

# Other binds:
bind r source-file ~/.tmux.conf \; display "Reloaded"

bind f command-prompt -p find-session 'switch-client -t %%'

bind-key y set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

#  }}}

# Status Line {{{

# Statusline settings:
set -g status on               # display status line
set -g status-left-length 100  #
set -g status-right-length 100 #
set -g status-justify "left"   #
set -g status-position top
set -g status-interval 0       # never redraw status line if it's not changed


# Statusline design:
set -g status-bg $INACTIVE_BG
setw -g window-status-separator ""
setw -g window-status-format "$INACTIVE #I #W "
# setw -g window-status-current-format "#[fg=$ACTIVE_BG,bg=$INACTIVE_BG]${ACTIVE}#I #W#[fg=$ACTIVE_BG,bg=$INACTIVE_BG]"
setw -g window-status-current-format "$ACTIVE #I #W "
set -g status-left ""
# if-shell $DARWIN "set -g status-right '$ACTIVE#(battery.sh)'"
# if-shell $LINUX "set -g status-right ''"
set -g status-right "$INACTIVE“#S” %H:%M %d-%b-%y"

# }}}

# vim: foldmethod=marker foldlevel=0 foldenable formatoptions-=cro foldlevelstart=0
